{"ast":null,"code":"\"use strict\";\n\nimport _objectSpread from \"D:\\\\Vscode\\\\MERNPROJECTS\\\\Pwa reference\\\\react-native-pwa\\\\react-native-pwa\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"D:\\\\Vscode\\\\MERNPROJECTS\\\\Pwa reference\\\\react-native-pwa\\\\react-native-pwa\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\nimport { createNavigatorFactory, StackActions, StackRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport { NativeStackView } from '../views/NativeStackView';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction NativeStackNavigator(_ref) {\n  var id = _ref.id,\n    initialRouteName = _ref.initialRouteName,\n    children = _ref.children,\n    layout = _ref.layout,\n    screenListeners = _ref.screenListeners,\n    screenOptions = _ref.screenOptions,\n    screenLayout = _ref.screenLayout,\n    UNSTABLE_getStateForRouteNamesChange = _ref.UNSTABLE_getStateForRouteNamesChange,\n    rest = _objectWithoutProperties(_ref, [\"id\", \"initialRouteName\", \"children\", \"layout\", \"screenListeners\", \"screenOptions\", \"screenLayout\", \"UNSTABLE_getStateForRouteNamesChange\"]);\n  var _useNavigationBuilder = useNavigationBuilder(StackRouter, {\n      id: id,\n      initialRouteName: initialRouteName,\n      children: children,\n      layout: layout,\n      screenListeners: screenListeners,\n      screenOptions: screenOptions,\n      screenLayout: screenLayout,\n      UNSTABLE_getStateForRouteNamesChange: UNSTABLE_getStateForRouteNamesChange\n    }),\n    state = _useNavigationBuilder.state,\n    describe = _useNavigationBuilder.describe,\n    descriptors = _useNavigationBuilder.descriptors,\n    navigation = _useNavigationBuilder.navigation,\n    NavigationContent = _useNavigationBuilder.NavigationContent;\n  React.useEffect(function () {\n    return (\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation?.addListener?.('tabPress', function (e) {\n        var isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(function () {\n          if (state.index > 0 && isFocused && !e.defaultPrevented) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch(_objectSpread({}, StackActions.popToTop(), {\n              target: state.key\n            }));\n          }\n        });\n      })\n    );\n  }, [navigation, state.index, state.key]);\n  return /*#__PURE__*/_jsx(NavigationContent, {\n    children: /*#__PURE__*/_jsx(NativeStackView, _objectSpread({}, rest, {\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors,\n      describe: describe\n    }))\n  });\n}\n__signature__(NativeStackNavigator, \"useNavigationBuilder{{\\n    state,\\n    describe,\\n    descriptors,\\n    navigation,\\n    NavigationContent\\n  }}\\nuseEffect{}\", function () {\n  return [useNavigationBuilder];\n});\nexport function createNativeStackNavigator(config) {\n  return createNavigatorFactory(NativeStackNavigator)(config);\n}\n;\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n  if (!reactHotLoader) {\n    return;\n  }\n  reactHotLoader.register(NativeStackNavigator, \"NativeStackNavigator\", \"D:\\\\Vscode\\\\MERNPROJECTS\\\\Pwa reference\\\\react-native-pwa\\\\react-native-pwa\\\\node_modules\\\\@react-navigation\\\\native-stack\\\\lib\\\\module\\\\navigators\\\\createNativeStackNavigator.js\");\n  reactHotLoader.register(createNativeStackNavigator, \"createNativeStackNavigator\", \"D:\\\\Vscode\\\\MERNPROJECTS\\\\Pwa reference\\\\react-native-pwa\\\\react-native-pwa\\\\node_modules\\\\@react-navigation\\\\native-stack\\\\lib\\\\module\\\\navigators\\\\createNativeStackNavigator.js\");\n})();\n;\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}