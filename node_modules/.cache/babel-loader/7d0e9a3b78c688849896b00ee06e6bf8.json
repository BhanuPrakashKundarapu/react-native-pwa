{"ast":null,"code":"/*!\n * keygrip\n * Copyright(c) 2011-2014 Jed Schmidt\n * MIT Licensed\n */\n\n'use strict';\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\nvar compare = require('tsscmp');\nvar crypto = require(\"crypto\");\nfunction Keygrip(keys, algorithm, encoding) {\n  if (!algorithm) algorithm = \"sha1\";\n  if (!encoding) encoding = \"base64\";\n  if (!(this instanceof Keygrip)) return new Keygrip(keys, algorithm, encoding);\n  if (!keys || !(0 in keys)) {\n    throw new Error(\"Keys must be provided.\");\n  }\n  function sign(data, key) {\n    return crypto.createHmac(algorithm, key).update(data).digest(encoding).replace(/\\/|\\+|=/g, function (x) {\n      return {\n        \"/\": \"_\",\n        \"+\": \"-\",\n        \"=\": \"\"\n      }[x];\n    });\n  }\n  this.sign = function (data) {\n    return sign(data, keys[0]);\n  };\n  this.verify = function (data, digest) {\n    return this.index(data, digest) > -1;\n  };\n  this.index = function (data, digest) {\n    for (var i = 0, l = keys.length; i < l; i++) {\n      if (compare(digest, sign(data, keys[i]))) {\n        return i;\n      }\n    }\n    return -1;\n  };\n}\nKeygrip.sign = Keygrip.verify = Keygrip.index = function () {\n  throw new Error(\"Usage: require('keygrip')(<array-of-keys>)\");\n};\nmodule.exports = Keygrip;\n;\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n  if (!reactHotLoader) {\n    return;\n  }\n  reactHotLoader.register(Keygrip, \"Keygrip\", \"D:\\\\Vscode\\\\MERNPROJECTS\\\\Pwa reference\\\\react-native-pwa\\\\react-native-pwa\\\\node_modules\\\\keygrip\\\\index.js\");\n})();\n;\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}