{"ast":null,"code":"\"use strict\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport * as React from 'react';\nimport { NavigationContext } from \"./NavigationContext.js\";\nimport { NavigationIndependentTreeContext } from \"./NavigationIndependentTreeContext.js\";\nimport { NavigationRouteContext } from \"./NavigationRouteContext.js\";\n/**\n * Component to make the child navigation container independent of parent containers.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function NavigationIndependentTree(_ref) {\n  var children = _ref.children;\n  return (\n    /*#__PURE__*/\n    // We need to clear any existing contexts for nested independent container to work correctly\n    _jsx(NavigationRouteContext.Provider, {\n      value: undefined,\n      children:\n      /*#__PURE__*/\n      _jsx(NavigationContext.Provider, {\n        value: undefined,\n        children:\n        /*#__PURE__*/\n        _jsx(NavigationIndependentTreeContext.Provider, {\n          value: true,\n          children: children\n        })\n      })\n    })\n  );\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(NavigationIndependentTree, \"NavigationIndependentTree\", \"D:\\\\Vscode\\\\MERNPROJECTS\\\\Pwa reference\\\\react-native-pwa\\\\react-native-pwa\\\\node_modules\\\\@react-navigation\\\\core\\\\lib\\\\module\\\\NavigationIndependentTree.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}